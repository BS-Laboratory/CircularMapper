group 'com.uni-tuebingen.de.it.eager.circularmapper'
version '1.93.3'


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'
    }
}


subprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'jacoco'

}



project(':generator') {
  group 'com.uni-tuebingen.de.it.eager.circularmapper.generator'
  version '1.93.3'


    sourceSets {
        main {
            java {
                srcDir '$projectDir/generator'
                include '*'
            }
        }
        test {
            java {
                srcDir 'test'
            }
        }
    }


    dependencies {
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile 'com.google.guava:guava:19.0'
    compile 'com.github.samtools:htsjdk:2.6.1'
    compile 'org.apache.commons:com.springsource.org.apache.commons.cli:1.2.0'
    compile 'junit:junit:4.12'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    jar {
        manifest {
            attributes("Implementation-Title": "CircularGenerator",
                   "Implementation-Version": version, "main-Class": "CircularGenerator")
       }
       doFirst {
           from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
        }
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.java
                groupId 'com.uni-tuebingen.de.it.eager'
                artifactId 'CircularGenerator'
            }
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }


    bintray {
        user = bintrayUser
        key = bintrayKey
        publications = ['MyPublication']
        publish = true
	override = true
        pkg {
            repo = 'EAGER'
            name = 'CircularMapper.Generator'
            licenses = ['GPL-3.0']
            vcsUrl = "https://github.com/apeltzer/CircularMapper"
            version {
                name = project.version
                desc = 'A method to improve mappings on circular genomes, using the BWA mapper'
                released  = new Date()
                vcsTag = project.version
                attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
            }

        }
    }

}



project(':realign') {
  group 'com.uni-tuebingen.de.it.eager.circularmapper.realigner'
  version '1.93.3'


    sourceSets {
        main {
            java {
                srcDir 'realigner'
                include '**'
            }
        }
        test {
            java {
                srcDir 'test'
            }
        }
    }


    dependencies {
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile 'com.google.guava:guava:19.0'
    compile 'com.github.samtools:htsjdk:2.6.1'
    compile 'org.apache.commons:com.springsource.org.apache.commons.cli:1.2.0'
    compile 'junit:junit:4.12'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    jar {
        manifest {
            attributes("Implementation-Title": "RealignSAMFile",
                   "Implementation-Version": version, "main-Class": "RealignSAMFile")
       }
       doFirst {
           from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
        }
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.java
                groupId 'com.uni-tuebingen.de.it.eager'
                artifactId 'RealignSAMFile'
            }
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }


    bintray {
        user = bintrayUser
        key = bintrayKey
        publications = ['MyPublication']
        publish = true
        override = true
	pkg {
            repo = 'EAGER'
            name = 'CircularMapper.Realigner'
            licenses = ['GPL-3.0']
            vcsUrl = "https://github.com/apeltzer/CircularMapper"
            version {
                name = project.version
                desc = 'A method to improve mappings on circular genomes, using the BWA mapper'
                released  = new Date()
                vcsTag = project.version
                attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
            }

        }
    }


}
